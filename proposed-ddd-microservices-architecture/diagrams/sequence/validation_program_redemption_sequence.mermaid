sequenceDiagram
    participant Customer
    participant ValidationSvc as Validation Service
    participant Billing as Billing Service
    participant Program as Program Management
    participant ParkingOps as Parking Operations
    participant Analytics as Analytics Service
    participant Notification as Notification Service
    participant Merchant as Merchant Partner
    
    Note over Customer, Merchant: Validation Program Redemption Flow

    %% Validation Code Presentation
    rect rgb(230, 245, 255)
    Note over Customer, ValidationSvc: Validation Code Presentation
    Customer->>+ValidationSvc: Present validation code
    ValidationSvc->>ValidationSvc: Parse validation code format
    
    alt QR Code Validation
        ValidationSvc->>ValidationSvc: Decode QR code
        Note right of ValidationSvc: QR code contains:<br/>- Merchant identifier<br/>- Validation amount<br/>- Expiration timestamp<br/>- Security hash
        
    else Physical Validation Ticket
        ValidationSvc->>ValidationSvc: Process ticket barcode
        Note right of ValidationSvc: Ticket contains:<br/>- Validation serial number<br/>- Merchant code<br/>- Discount value<br/>- Usage restrictions
        
    else Digital Validation Code
        ValidationSvc->>ValidationSvc: Validate alphanumeric code
        Note right of ValidationSvc: Digital code includes:<br/>- Program identifier<br/>- Customer reference<br/>- Validation amount<br/>- Time restrictions
        
    else Mobile App Integration
        ValidationSvc->>ValidationSvc: Process app-generated validation
        Note right of ValidationSvc: App validation:<br/>- Geolocation verification<br/>- Time-based codes<br/>- Merchant app integration<br/>- Biometric confirmation
    end
    
    ValidationSvc-->>-Customer: Validation code received
    end

    %% Program Verification
    rect rgb(255, 245, 230)
    Note over ValidationSvc, Program: Program Verification Phase
    ValidationSvc->>+Program: Verify validation program
    Program->>Program: Check program status and rules
    
    alt Program Active and Valid
        Program->>Program: Retrieve program configuration
        Note right of Program: Program details:<br/>- Discount amount/percentage<br/>- Usage limitations<br/>- Eligible time periods<br/>- Participating locations<br/>- Maximum redemptions
        
        Program->>+Merchant: Verify merchant participation
        Merchant->>Merchant: Confirm merchant is active
        Merchant-->>-Program: Merchant verification confirmed
        
        Program-->>ValidationSvc: Program validated
        
    else Program Expired or Inactive
        Program-->>ValidationSvc: Program no longer valid
        ValidationSvc-->>Customer: Validation program expired
        
    else Merchant Not Participating
        Program-->>ValidationSvc: Merchant not enrolled
        ValidationSvc-->>Customer: Validation not accepted at this location
    end
    
    Program-->>-ValidationSvc: Program verification complete
    end

    %% Validation Code Verification
    rect rgb(240, 255, 240)
    Note over ValidationSvc, Analytics: Code Verification & Anti-fraud
    ValidationSvc->>ValidationSvc: Verify code authenticity
    
    ValidationSvc->>ValidationSvc: Check code usage history
    Note right of ValidationSvc: Fraud prevention:<br/>- Duplicate usage detection<br/>- Timestamp validation<br/>- Geographic restrictions<br/>- Usage frequency limits
    
    alt Code Already Used
        ValidationSvc->>Analytics: Log attempted duplicate usage
        ValidationSvc-->>Customer: Validation code already redeemed
        
    else Code Expired
        ValidationSvc-->>Customer: Validation code has expired
        
    else Code Usage Limit Exceeded
        ValidationSvc-->>Customer: Maximum redemptions reached
        
    else Code Valid for Redemption
        ValidationSvc->>ValidationSvc: Mark code as used
        ValidationSvc->>Analytics: Log successful validation
        
        ValidationSvc->>+ParkingOps: Check current parking session
        ParkingOps->>ParkingOps: Retrieve active parking session
        ParkingOps-->>-ValidationSvc: Session details confirmed
    end
    end

    %% Discount Application
    rect rgb(255, 240, 255)
    Note over ValidationSvc, Billing: Discount Application Phase
    ValidationSvc->>+Billing: Apply validation discount
    
    Billing->>Billing: Calculate current parking charges
    Note right of Billing: Current charges include:<br/>- Base parking fee<br/>- Time-based charges<br/>- EV charging costs<br/>- Premium service fees
    
    Billing->>Billing: Apply validation discount
    Note right of Billing: Discount types:<br/>- Fixed amount reduction<br/>- Percentage discount<br/>- Free parking time<br/>- Service fee waiver
    
    alt Full Validation (Free Parking)
        Billing->>Billing: Reduce charges to zero
        Note right of Billing: Complete validation covers<br/>all parking charges
        
    else Partial Validation
        Billing->>Billing: Apply partial discount
        Note right of Billing: Partial validation reduces<br/>charges by specified amount
        
    else Time-based Validation
        Billing->>Billing: Apply free time period
        Note right of Billing: Time validation provides<br/>specified hours at no charge
    end
    
    Billing->>Billing: Recalculate final amount due
    Billing-->>-ValidationSvc: Discount applied successfully
    
    ValidationSvc-->>Customer: Validation discount applied
    end

    %% Merchant Reconciliation
    rect rgb(235, 255, 235)
    Note over Program, Merchant: Merchant Reconciliation Process
    opt B2B Merchant Reconciliation
        Program->>+Merchant: Record validation redemption
        Merchant->>Merchant: Update redemption tracking
        Note right of Merchant: Merchant tracking:<br/>- Number of validations<br/>- Total discount amounts<br/>- Customer acquisition metrics<br/>- Program ROI analysis
        
        Merchant->>Merchant: Calculate merchant liability
        Note right of Merchant: Cost allocation:<br/>- Merchant pays discount<br/>- Shared cost model<br/>- Marketing fund deduction<br/>- Per-validation fee
        
        Merchant-->>-Program: Reconciliation recorded
        
        Program->>+Analytics: Update merchant program metrics
        Analytics->>Analytics: Track program performance
        Analytics-->>-Program: Metrics updated
    end
    end

    %% Customer Experience Enhancement
    rect rgb(255, 235, 235)
    Note over ValidationSvc, Notification: Customer Communication
    ValidationSvc->>+Notification: Send validation confirmation
    
    par Customer Notifications
        Notification->>Customer: SMS confirmation of discount
        Note right of Customer: "Your validation saved you $X.XX<br/>on today's parking"
    and Notification->>Customer: Email receipt with validation details
    end

    opt App Notification
        Notification->>Customer: Push notification with savings summary
    end
    
    Notification-->>-ValidationSvc: Customer notifications sent
    
    %% Loyalty Program Integration
    opt Loyalty Program Member
        ValidationSvc->>Program: Award loyalty points for validation usage
        Program->>Program: Calculate bonus points
        Program->>Customer: Credit loyalty account
        Note right of Customer: Additional benefits for<br/>using validation programs
    end
    end

    %% Analytics & Program Optimization
    rect rgb(245, 245, 255)
    Note over Analytics, Merchant: Program Performance Analytics
    Analytics->>+Program: Analyze validation program effectiveness
    
    Program->>Program: Calculate program metrics
    Note right of Program: Program KPIs:<br/>- Redemption rates<br/>- Customer acquisition<br/>- Revenue impact<br/>- Merchant satisfaction<br/>- Customer retention
    
    Program->>Program: Identify optimization opportunities
    Note right of Program: Optimization areas:<br/>- Discount amount tuning<br/>- Time restriction adjustments<br/>- Geographic expansion<br/>- New merchant recruitment
    
    alt Program Performing Well
        Program->>Merchant: Provide positive performance report
        Program->>Analytics: Continue current program parameters
        
    else Program Needs Adjustment
        Program->>Merchant: Recommend program modifications
        Program->>ValidationSvc: Update program rules
        
    else Program Underperforming
        Program->>Merchant: Discuss program restructuring
        Program->>Analytics: Analyze competitive alternatives
    end
    
    Program-->>-Analytics: Program analysis complete
    end

    %% Fraud Prevention & Security
    rect rgb(255, 255, 235)
    Note over ValidationSvc, Analytics: Fraud Prevention Monitoring
    loop Continuous Fraud Monitoring
        ValidationSvc->>Analytics: Monitor validation patterns
        
        Analytics->>Analytics: Detect suspicious validation activity
        Note right of Analytics: Fraud indicators:<br/>- Unusual redemption frequency<br/>- Geographic anomalies<br/>- Code sharing patterns<br/>- Merchant collusion signs
        
        alt Fraud Detected
            Analytics->>ValidationSvc: Flag suspicious activity
            ValidationSvc->>Program: Investigate potential fraud
            Program->>Merchant: Verify merchant compliance
            
        else Normal Activity
            Analytics->>Analytics: Continue monitoring
        end
    end
    end

    Note over Customer, Merchant: Validation Program Redemption Complete
