classDiagram
    class UserAccount {
        <<aggregate_root>>
        -UserId user_id
        -String username
        -String hashed_password
        -String email
        -UserTypeEnum user_type // Staff, Partner, SystemUser
        -UserStatusEnum status
        -List~RoleId~ role_ids
        -DateTime created_at
        -DateTime last_login_at
        +createUser(username, password, email, user_type)
        +authenticate(password) Boolean
        +assignRole(role_id)
        +revokeRole(role_id)
        +updateStatus(new_status)
        +resetPassword()
        +getPermissions() List~Permission~
        +publish_staff_user_created_event(user_id, username, user_type)
    }

    class Role {
        <<aggregate_root>>
        -RoleId role_id
        -String role_name
        -String description
        -List~PermissionId~ permission_ids
        +createRole(name, description)
        +addPermission(permission_id)
        +removePermission(permission_id)
        +getPermissions() List~Permission~
        +publish_role_updated_event(role_id, role_name, permissions)
    }

    class Permission {
        <<aggregate_root>>
        -PermissionId permission_id
        -String permission_name // e.g., "OverrideGate", "ViewFinancialReports", "ManageUsers"
        -String description
        -String resource_affected // e.g., "Gate", "BillingReport", "UserAccount"
        -ActionTypeEnum action_type // e.g., Create, Read, Update, Delete, Execute
        +createPermission(name, description, resource, action)
        +publish_permission_changed_event(permission_id, permission_name, action_type)
    }

    class StaffActionAuditLog {
        <<aggregate_root>>
        -AuditLogId log_id
        -UserId actor_user_id
        -String action_performed // Description of the action
        -String target_resource_id // Optional: ID of the entity affected
        -String target_resource_type // Optional: Type of the entity affected
        -DateTime timestamp
        -String details // JSON or structured string for additional context
        -Boolean success_status
        +recordStaffAction(user_id, action, target_id, target_type, details, success)
        +publish_staff_action_audited_event(log_id, actor_user_id, action_performed, success_status)
    }

    class UserTypeEnum {
        <<enumeration>>
        StaffInternal
        PartnerExternal
        SystemAutomated
    }

    class UserStatusEnum {
        <<enumeration>>
        Active
        Suspended
        Deactivated
        PendingApproval
    }

    class ActionTypeEnum { // For Permissions
        <<enumeration>>
        Create
        Read
        Update
        Delete
        ExecuteSpecial
        Approve
    }

    class UserId {
        <<value_object>>
        -String value
        +toString() String
    }

    class RoleId {
        <<value_object>>
        -String value
        +toString() String
    }

    class PermissionId {
        <<value_object>>
        -String value
        +toString() String
    }

    class AuditLogId {
        <<value_object>>
        -String value
        +toString() String
    }

    UserAccount -- UserId : has_id
    UserAccount "*" -- "*" Role : has_assigned
    Role -- RoleId : has_id
    Role "*" -- "*" Permission : grants
    Permission -- PermissionId : has_id
    StaffActionAuditLog -- AuditLogId : has_id

    UserAccount "1" -- "0..*" StaffActionAuditLog : performed_by_actor
    StaffActionAuditLog -- ActionTypeEnum : relates_to_action_type

    UserAccount -- UserTypeEnum : is_of_type
    UserAccount -- UserStatusEnum : has_status
    Permission -- ActionTypeEnum : allows_action
