---
title: Easy Park Plus - Pricing Class Diagram (Proposed)
---

classDiagram
    class PricingRuleSet {
        <<Aggregate Root>>
        +RuleSetId rule_set_id
        +String name
        +List~PricingCondition~ applicability_conditions
        +List~RateDefinition~ rate_definitions
        +List~DiscountRule~ discount_rules
        +List~TaxRule~ tax_rules
        +TriggerTypeEnum trigger_type
        +Boolean is_active
        +calculate_charge_estimate(visit_context, ev_charging_context, reservation_context, active_policies, customer_type) ChargeEstimate
        +get_pricing_preview(request_details, active_policies, customer_type) PricingPreview
        +apply_discount_rules(base_charge, discount_rules, customer_type) Money
        +apply_tax_rules(charge_before_tax, tax_rules) Money
        +publish_pricing_quote_generated_event() DomainEvent
        +publish_final_price_calculated_event() DomainEvent
        +publish_charging_price_calculated_event() DomainEvent
    }

    class RateDefinition {
        <<Entity>>
        +RateDefinitionId rate_definition_id
        +RateDefinitionType rate_type
        +Money rate_amount
        +String basis // e.g., "per_hour", "per_kwh"
        +List~PricingCondition~ conditions
    }
    class TaxRule {
        <<Entity>>
        +TaxRuleId tax_rule_id
        +String name
        +Decimal rate_percentage
        +List~PricingCondition~ applicability_conditions
    }
    class DiscountRule {
        <<Entity>>
        +DiscountRuleId discount_rule_id
        +String name
        +DiscountTypeEnum discount_type
        +Decimal discount_value // Amount or percentage
        +List~PricingCondition~ applicability_conditions
    }

    class RuleSetId {
        <<Value Object>>
        +UUID id
    }
    class PricingCondition {
        <<Value Object>>
        +String attribute // e.g., "time_of_day", "vehicle_category", "customer_type", "duration_hours", "occupancy_band"
        +String operator // e.g., "EQUALS", "GREATER_THAN"
        +String value
    }
    class RateDefinitionType {
        <<Enumeration>>
        PerHour
        PerMinute
        FlatFee
        PerKilowattHour
        TieredByDuration
        TieredByConsumption
        Multiplier
    }
    class Money {
        <<Value Object>>
        +Decimal amount
        +String currency_code
    }
    class OccupancyBand {
        <<Value Object>>
        +String level // Low, Medium, High
    }
    class EnergyDemandLevel {
        <<Value Object>>
        +String level // Low, Medium, High, Peak
    }
    class TriggerTypeEnum {
        <<Enumeration>>
        TimeBased
        DemandBased
        EventDriven
        Manual
    }
    class ChargeEstimate {
        <<Value Object>>
        +Money base_fee
        +List~FeeComponent~ fee_components
        +List~AppliedDiscountVO~ applied_discounts
        +List~AppliedTaxVO~ applied_taxes
        +Money total_estimated_charge
    }
    class PricingPreview {
        <<Value Object>>
        +Money estimated_charge
        +String details_summary
    }
    class FeeComponent {
        <<Value Object>>
        +String name // e.g., "Parking Fee", "EV Energy Fee", "Idle Fee"
        +Money amount
    }
    class TaxRuleId {
        <<Value Object>>
        +UUID id
    }
    class DiscountRuleId {
        <<Value Object>>
        +UUID id
    }
    class DiscountTypeEnum {
        <<Enumeration>>
        Percentage
        FixedAmount
    }
    class AppliedDiscountVO {
        <<Value Object>>
        +DiscountRuleId discount_rule_id
        +String discount_rule_name
        +Money discounted_amount
    }
    class AppliedTaxVO {
        <<Value Object>>
        +TaxRuleId tax_rule_id
        +String tax_type
        +Money tax_amount
    }
    class RateDefinitionId {
        <<Value Object>>
        +UUID id
    }

    PricingRuleSet "1" *-- "1" RuleSetId : has
    PricingRuleSet "1" *-- "0..*" RateDefinition : defines_rates
    PricingRuleSet "1" *-- "0..*" DiscountRule : defines_discounts
    PricingRuleSet "1" *-- "0..*" TaxRule : defines_taxes
    PricingRuleSet "1" *-- "0..*" PricingCondition : has_conditions
