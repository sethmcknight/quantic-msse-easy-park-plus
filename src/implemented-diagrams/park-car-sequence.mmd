sequenceDiagram
    participant User
    participant UI as ParkingLotUI
    participant PL as ParkingLot
    participant Factory as VehicleFactory
    participant Observer as ParkingLotObserver

    User->>UI: Selects lot and level
    User->>UI: Enters vehicle info and clicks "Park"
    UI->>UI: Validates input data
    
    UI->>PL: park(reg, make, model, color, is_electric, is_motorcycle, lot_name, level)
    
    PL->>PL: _create_vehicle(reg, make, model, color, is_electric, is_motorcycle)
    PL->>Factory: create_vehicle(...)
    Factory-->>PL: Returns Vehicle instance
    
    alt Specific Lot/Level Specified
        PL->>PL: Find level_obj matching lot_name and level
        alt Level Found
            PL->>PL: Find empty slot in level_obj
            alt Slot Found
                PL->>PL: Park vehicle in slot
                PL->>Observer: notify_observers("Vehicle parked in lot/level")
                Observer-->>UI: update("Vehicle parked in lot/level")
                PL-->>UI: slot_number
                UI-->>User: Show confirmation with lot/level info
            else No Slot Available
                PL-->>UI: None
                UI-->>User: Show "No available slots in selected lot/level" error
            end
        else Level Not Found
            PL-->>UI: None
            UI-->>User: Show "Invalid lot/level" error
        end
    else No Specific Location
        PL->>PL: Find first available slot in any level
        alt Slot Found
            PL->>PL: Park vehicle in slot
            PL->>Observer: notify_observers("Vehicle parked")
            Observer-->>UI: update("Vehicle parked")
            PL-->>UI: slot_number
            UI-->>User: Show confirmation
        else No Slot Available
            PL-->>UI: None
            UI-->>User: Show "No available slots" error
        end
    end 